#
##  Copyright (c) 2020, The OpenThread Authors.
##  All rights reserved.
##
##  Redistribution and use in source and binary forms, with or without
##  modification, are permitted provided that the following conditions are met:
##  1. Redistributions of source code must retain the above copyright
##     notice, this list of conditions and the following disclaimer.
##  2. Redistributions in binary form must reproduce the above copyright
##     notice, this list of conditions and the following disclaimer in the
##     documentation and/or other materials provided with the distribution.
##  3. Neither the name of the copyright holder nor the
##     names of its contributors may be used to endorse or promote products
##     derived from this software without specific prior written permission.
##
##  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
##  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
##  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
##  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
##  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
##  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
##  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
##  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
##  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
##  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
##  POSSIBILITY OF SUCH DAMAGE.
##

name: Build

on: [push, pull_request]

jobs:

  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      if: "github.ref != 'refs/heads/master'"

  pretty:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Bootstrap
      run: sudo BUILD_TARGET=pretty-check tests/scripts/bootstrap.sh
    - name: Check
      run: script/make-pretty check

  android-check:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        mdns: ["mDNSResponder", ""]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Check
      env:
        OTBR_MDNS: ${{ matrix.mdns }}
      run: >
        docker run --rm -v $PWD:/build/ot-br-posix openthread/android-trusty bash -c
        "BUILD_TARGET=android-check ot-br-posix/tests/scripts/bootstrap.sh && \
         ot-br-posix/tests/scripts/check-android-build"

  check:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        mdns: ["mDNSResponder", "avahi"]
    env:
      BUILD_TARGET: check
      OTBR_MDNS: ${{ matrix.mdns }}
      OTBR_COVERAGE: 1
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Bootstrap
      run: tests/scripts/bootstrap.sh
    - name: Run
      run: script/test build check
    - name: Codecov
      uses: codecov/codecov-action@v1

  rest-check:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        rest: ["rest-off", ""]
    env:
      BUILD_TARGET: check
      OTBR_REST: ${{ matrix.rest }}
      OTBR_COVERAGE: 1
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Bootstrap
      run: tests/scripts/bootstrap.sh
    - name: Run
      run: script/test build check
    - name: Codecov
      uses: codecov/codecov-action@v1

  script-check:
    runs-on: ubuntu-18.04
    env:
      BUILD_TARGET: script-check
      OTBR_COVERAGE: 1
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Bootstrap
      run: tests/scripts/bootstrap.sh
    - name: Run
      run: tests/scripts/check-scripts
    - name: Codecov
      uses: codecov/codecov-action@v1

  scan-build:
    runs-on: ubuntu-18.04
    env:
      BUILD_TARGET: scan-build
      CC: clang
      CXX: clang++
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Bootstrap
      run: tests/scripts/bootstrap.sh
    - name: Run
      run: tests/scripts/check-scan-build

  package:
    runs-on: ubuntu-18.04
    env:
      BUILD_TARGET: package
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Bootstrap
      run: |
        tests/scripts/bootstrap.sh
        sudo pip3 install --system -U cmake==3.10.3
        cmake --version | grep 3.10.3
    - name: Build
      run: script/test package

  thread-1-2-backbone:
    runs-on: ubuntu-18.04
    env:
      PACKET_VERIFICATION: 1
      REFERENCE_DEVICE: 1
      THREAD_VERSION: 1.2
      INTER_OP: 1
      VIRTUAL_TIME: 0
      PYTHONUNBUFFERED: 1
      OTBR_COVERAGE: 1
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build OTBR Docker Image
        run: |
          otbr_options="-DOTBR_BACKBONE_ROUTER=ON -DOT_DUA=ON -DOT_MLR=ON -DOTBR_COVERAGE=ON"
          otbr_image_name="otbr-ot12-backbone-ci"
          docker build -t "${otbr_image_name}" -f etc/docker/Dockerfile . --build-arg REFERENCE_DEVICE=1 --build-arg OT_BACKBONE_CI=1 --build-arg OTBR_OPTIONS="${otbr_options}"
      - name: Bootstrap OpenThread Test
        run: |
          sudo rm /etc/apt/sources.list.d/* && sudo apt-get update
          sudo apt-get --no-install-recommends install -y python3-setuptools python3-wheel ninja-build socat
          python3 -m pip install -r third_party/openthread/repo/tests/scripts/thread-cert/requirements.txt
      - name: Build OpenThread
        run: |
          (cd third_party/openthread/repo && ./script/test build)
      - name: Get Thread-Wireshark
        run: |
          (cd third_party/openthread/repo && ./script/test get_thread_wireshark)
      - name: Run Test
        run: |
          export CI_ENV="$(bash <(curl -s https://codecov.io/env)) -e GITHUB_ACTIONS -e OTBR_COVERAGE"
          echo "CI_ENV=${CI_ENV}"
          (cd third_party/openthread/repo && sudo -E ./script/test cert_bbr ./tests/scripts/thread-cert/backbone/*.py || (sudo chmod a+r *.log *.json *.pcap && false))
      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: thread-1-2-backbone-results
          path: |
            third_party/openthread/repo/*.pcap
            third_party/openthread/repo/*.json
            third_party/openthread/repo/*.log
      - name: Codecov
        uses: codecov/codecov-action@v1
